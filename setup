#!/usr/bin/env perl

use strict;
use warnings;
use utf8;

my $imlib2_enabled = 0;

if (@ARGV == 1) {
	my $arg = $ARGV[0];
	if($arg eq "--with-imlib2") {
		$imlib2_enabled = 1;
	} else {
		print "unrecognized option: " . $arg . "\n";
		exit;
	}
}

if (`which Wand-config` eq "") {
    print "Wand-config is not found\n";
    exit;
}

if ($imlib2_enabled == 1 and `which imlib2-config` eq "") {
    print "imlib2-config is not found\n";
    exit;
}

my $wand_libs     = `Wand-config --libs`;
my $wand_lds      = `Wand-config --ldflags`;
my $wand_includes = `Wand-config --cflags`;

chomp($wand_libs);
chomp($wand_lds);
chomp($wand_includes);

my $imlib2_libs     = `imlib2-config --libs`;
my $imlib2_includes = `imlib2-config --cflags`;

chomp($imlib2_libs);
chomp($imlib2_includes);

my $libs    = $wand_libs . " " . $imlib2_libs;
my $lds     = $wand_lds . " ";
my $inclues = $wand_includes . " " . $imlib2_includes;

open(CONFIG_IN, "< config.in") or die("config.in not found");
open(CONFIG,    "> config")    or die("open config failed");

while (my $line = <CONFIG_IN>) {
  $line =~ s/\{\$ngx_feature_libs\}/$libs $lds/;
  if ($imlib2_enabled != 1) {
	  if ($line =~ /#include <Imlib2\.h>$/) {
		  next;
	  }
	  if ($line =~ /ngx_http_small_light_jpeg\.(c|h)/) {
		  next;
	  }
	  if ($line =~ /ngx_http_small_light_imlib2\.(c|h)/) {
		  next;
	  }
	  $line =~ s/\{\$CFLAGS\}/$inclues/;
  } else {
	  $line =~ s/\{\$CFLAGS\}/$inclues -DNGX_HTTP_SMALL_LIGHT_IMLIB2_ENABLED/;
  }
  print CONFIG $line;
}

close(CONFIG_IN);
close(CONFIG);

print("config is generated.\n");
